If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator')) {
	Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
	exit
}
cd $home
cd Downloads
#Create Restore Point
Checkpoint-Computer -Description "beforescript" -RestorePointType MODIFY_SETTINGS
$Ask = Read-Host "Do you need The Ultimate Windows Utility by Chris Titus?"
if($Ask -eq 'y') {
iwr -useb https://christitus.com/win | iex
} else {
Write-host "Skipping..."
}
#check for bitlocker
$BLinfo = Get-Bitlockervolume
if($BLinfo.ProtectionStatus -eq 'On' -and $BLinfo.EncryptionPercentage -eq '100'){
    write-output "'$env:computername - '$($BLinfo.MountPoint)' is encrypted"
    #Get Recovey key
   $recoverykeybit = (Get-BitLockerVolume -MountPoint '$($BLinfo.MountPoint)').KeyProtector
    New-Item "$HOME\Downloads\bitlockerrecoverykey.txt"
    Set-Content "$HOME\Downloads\bitlockerrecoverykey.txt" $recoverykeybit
    $recoverykeylocation = "$HOME\Downloads\bitlockerrecoverykey.txt"
    Write-Host "Recovery Key has been put to '$recoverykeylocation'"
    Start-Sleep 3
    cls
    Write-Host "You should upload for Online Backup. Highly recommended"
    $Ask45 = Read-Host "Do you want to upload it to a cloud? To back it up? Highly Recommended "
    if($Ask45 -eq 'y'){
 $Driveselector = 'X'
    while($Driveselector -ne ''){
        Clear-Host
        Write-Host "`n`t`t Drive Selector`n"
	Write-Host ""
        Write-Host -ForegroundColor Cyan "Drive Choice's"
        Write-Host -ForegroundColor DarkCyan -NoNewline "`n["; Write-Host -NoNewline "1"; Write-Host -ForegroundColor DarkCyan -NoNewline "]"; `
            Write-Host -ForegroundColor DarkCyan "GoogleDrive"

        Write-Host -ForegroundColor DarkCyan -NoNewline "`n["; Write-Host -NoNewline "2"; Write-Host -ForegroundColor DarkCyan -NoNewline "]"; `
            Write-Host -ForegroundColor DarkCyan "iCloud"

        Write-Host -ForegroundColor DarkCyan -NoNewline "`n["; Write-Host -NoNewline "3"; Write-Host -ForegroundColor DarkCyan -NoNewline "]"; `
            Write-Host -ForegroundColor DarkCyan "OneDrive"

        Write-Host -ForegroundColor DarkCyan -NoNewline "`n["; Write-Host -NoNewline "4"; Write-Host -ForegroundColor DarkCyan -NoNewline "]"; `
            Write-Host -ForegroundColor DarkCyan "Dropbox"

        Write-Host -ForegroundColor DarkCyan -NoNewline "`n["; Write-Host -NoNewline "5"; Write-Host -ForegroundColor DarkCyan -NoNewline "]"; `
            Write-Host -ForegroundColor DarkCyan "ProtonDrive"

        $Algorithmselector = Read-Host "`nSelect A Number: (leave blank to end Selection)"
        # Option 1
        if($Driveselector -eq 1){
           Start-Process "https://drive.google.com/drive/my-drive"
           sleep 3
	   break
        }
        # Option 2
        if($Driveselector -eq 2){
      Start-Process "https://www.icloud.com/iclouddrive"
            sleep 3
            break
        }

  # Option 3
        if($Driveselector -eq 3){
	Start-Process "https://onedrive.live.com/login/"
            sleep 3
            break
        }
  # Option 4
        if($Algorithmselector -eq 4){break}{
	Start-Process "https://www.dropbox.com/login"
            sleep 3
            break
        }
  # Option 5
        if($Driveselector -eq 5){
	Start-Process "https://account.proton.me/drive"
           sleep 3
	   break
        }

    }
    
    } else {
    Write-Host "You should upload for Online Backup.But Ok Skipping..."
    }
} else {
Write-Host "Bitlocker in not Enabled..."
}

clear-variable Ask
$AskDown = Read-host "Start download of av programs? y or n"
if ($AskDown -eq 'y') {
#Sec AV#
wget -o HitmanPro_x64.exe https://download.sophos.com/endpoint/clients/HitmanPro_x64.exe
wget -o ZemanaAntiMalwareSetup.exe https://zemana.com/downloads/Zemana.AntiMalware.Setup.exe

rm -force Autoruns.zip
rm -force ProcessExplorer.zip
rm -force TCPView.zip
$AskBrowser = Read-host "Can I open your browser? y or n"
if ($AskBrowser -eq 'y') {
Write-Host "Opening Browser..."
Start-sleep 3
Start-Process "https://www.emsisoft.com/en/home/emergency-kit/download/"
start-sleep 12
Start-Process "https://www.avast.com/download-thank-you.php?product=AVAST-ONE-FREE-WIN#pc"
start-sleep 12
Start-Process "https://www.norton.com/npe_latest"
start-sleep 12
Start-Process "https://www.trendmicro.com/en_us/forHome/products/housecall.html"
start-Sleep 15
} else {
write-Host ""
}

} else {
Write-Host "Skipping downloads..."
}
clear-variable AskDown
$Ask = Read-host "Do you need malware analysis tool? y or n"
if ($Ask2 -eq 'y') {
mkdir Avtools
cd Avtools
wget -o Autoruns.zip https://download.sysinternals.com/files/Autoruns.zip
wget -o ProcessExplorer.zip https://download.sysinternals.com/files/ProcessExplorer.zip
wget -o TCPView.zip https://download.sysinternals.com/files/TCPView.zip
Expand-Archive -Path Autoruns.zip -DestinationPath $home\Downloads\Avtools
Expand-Archive -Path ProcessExplorer.zip -DestinationPath $home\Downloads\Avtools
Expand-Archive -Path TCPView.zip -DestinationPath $home\Downloads\Avtools

#Pe studio malware analysis
Start-process "https://www.winitor.com/download2"
start-Sleep 6
#Give sha256 and compare it to download
$ComparisonHash = (Read-Host "Paste in the sha256 from the website.")

$SourceFile = Read-Host "Pasted the full file path"
$SourceHash = (Get-FileHash -Path $SourceFile -Algorithm sha256).hash

$ComparisonHash = $ComparisonHash -replace '\s',''
#Compare-Object -ReferenceObject $SourceHash -DifferenceObject $ComparisonHash -IncludeEqual
if ($SourceHash -eq $ComparisonHash){
	sleep 2
	cls
	Write-Host "They are correct it has not been tampered with" -ForegroundColor green

}

if ($SourceHash -ne $ComparisonHash) {
cls
	Write-Host "THE HASH IS NOT EQUAL! WARNING THIS MIGHT BE TAMPERED WITH OR EDITED" -ForegroundColor Red
	rm -force $SourceFile
	Write-Host "The file has been DELETED..."
	sleep 4
}

} else {
Write-Host "Skipping malware analysis tool..."
}
clear-variable Ask
# Get some not used services off the computer#
$services = @(
    "diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
    "DiagTrack"                                # Diagnostics Tracking Service
    "dmwappushservice"                         # WAP Push Message Routing Service (see known issues)
    "lfsvc"                                    # Geolocation Service
    "MapsBroker"                               # Downloaded Maps Manager
    "NetTcpPortSharing"                        # Net.Tcp Port Sharing Service
    "RemoteAccess"                             # Routing and Remote Access
    "RemoteRegistry"                           # Remote Registry
    "SharedAccess"                             # Internet Connection Sharing (ICS)
    "TrkWks"                                   # Distributed Link Tracking Client
    "lmhosts"                                  #TCP/IP NetBIOS Helper
    "WMPNetworkSvc"                            # Windows Media Player Network Sharing Service
    "WSearch"                                  # Windows Search
    "lltdsvc"				       #Link-Layer Topology Discovery Mapper
    "SEMgrSvc"				       #Payments and NFC/SE Manager
)
foreach ($service in $services) {
    Write-Output "Trying to disable $service"
	Get-Service -Name $service | Stop-Service -Force
    Get-Service -Name $service | Set-Service -StartupType Disabled
}
write-Host ""
Write-Host "Windows Defender is not going to like this. It think's it's malware but it is not"
$Ask = Read-Host "Do you want to add host entry's? y or n ...Windows Defender will block this go to defender and allow it"
if ($Ask -eq 'y') {
#open Windows security
start windowsdefender:
##edit windoes hosts file
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tlocalhost" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n::1`tlocalhost" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tdata.microsoft.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tmsftconnecttest.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tazureedge.net" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tactivity.windows.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tbingapis.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tmsedge.net" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tassets.msn.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tscorecardresearch.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttedge.microsoft.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttdata.msn.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttelemetry.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twns.notify.windows.com.akadns.net"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tus.vortex-win.data.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tus-v10.events.data.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`turs.microsoft.com.nsatc.net"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.telemetry.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.ppe.telemetry.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tvsgallery.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.live.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttelemetry.remoteapp.windowsazure.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttelemetry.urs.microsoft.com"

} else {
Write-Host "Skipping..."
}
clear-variable Ask
clear-variable Ask2
$Ask2 = Read-Host "Do you want to hardden Windows Defender?"
    if ($Ask2 -eq 'y'){
  wget -o InstallDefenderUISilent.exe https://defenderui.com/Download/InstallDefenderUISilent.exe
  InstallDefenderUISilent.exe /VERYSILENT
cd "C:\Program Files\DefenderUI\"
  Start-Process -FilePath "C:\Program Files\DefenderUI\DefenderUI.exe -RecommendedProfile"
cd $home
cd Downloads
        } else {
write-Host ""
}

Write-host "Updating Windows Defender..."
Update-MpSignature
} else {
Write-Host "All Done..."
}

