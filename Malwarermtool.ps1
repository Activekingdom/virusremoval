cd $home
cd Downloads
#Create Restore Point
Checkpoint-Computer -Description "beforescript" -RestorePointType MODIFY_SETTINGS
$Ask = Read-Host "Do you need The Ultimate Windows Utility by Chris Titus?"
if($Ask -eq 'y') {
iwr -useb https://christitus.com/win | iex
} else {
Write-host "Skipping..."
}

If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator')) {
	Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
	exit
}

#check for bitlocker
$BLinfo = Get-Bitlockervolume
if($BLinfo.ProtectionStatus -eq 'On' -and $BLinfo.EncryptionPercentage -eq '100'){
    write-output "'$env:computername - '$($BLinfo.MountPoint)' is encrypted"
    #Get Recovey key
   $recoverykeybit = (Get-BitLockerVolume -MountPoint '$($BLinfo.MountPoint)').KeyProtector
    New-Item "$HOME\Downloads\bitlockerrecoverykey.txt"
    Set-Content "$HOME\Downloads\bitlockerrecoverykey.txt" $recoverykeybit
    $recoverykeylocation = "$HOME\Downloads\bitlockerrecoverykey.txt"
    Write-Host "Recovery Key has been put to '$recoverykeylocation'"
    Start-Sleep 3
} else {
Write-Host "Bitlocker in not Enabled..."
}

clear-variable Ask
$AskDown = Read-host "Start download of av programs? y or n"
if ($AskDown -eq 'y') {
#Sec AV#
wget -o HitmanPro_x64.exe https://download.sophos.com/endpoint/clients/HitmanPro_x64.exe
wget -o ZemanaAntiMalwareSetup.exe https://zemana.com/downloads/Zemana.AntiMalware.Setup.exe


rm -force Autoruns.zip
rm -force ProcessExplorer.zip
rm -force TCPView.zip
$AskBrowser = Read-host "Can I open your browser? y or n"
if ($AskBrowser -eq 'y') {
Write-Host "Opening Browser..."
Start-sleep 3
Start-Process "https://www.emsisoft.com/en/home/emergency-kit/download/"
start-sleep 12
Start-Process "https://www.avast.com/download-thank-you.php?product=AVAST-ONE-FREE-WIN#pc"
start-sleep 12
Start-Process "https://www.norton.com/npe_latest"
start-sleep 12
Start-Process "https://www.trendmicro.com/en_us/forHome/products/housecall.html"
start-Sleep 15
} else {
write-Host ""
}

} else {
Write-Host "Skipping downloads..."
}
clear-variable AskDown
$Ask = Read-host "Do you need malware analysis tool? y or n"
if ($Ask2 -eq 'y') {
mkdir Avtools
cd Avtools
wget -o Autoruns.zip https://download.sysinternals.com/files/Autoruns.zip
wget -o ProcessExplorer.zip https://download.sysinternals.com/files/ProcessExplorer.zip
wget -o TCPView.zip https://download.sysinternals.com/files/TCPView.zip
Expand-Archive -Path Autoruns.zip -DestinationPath $home\Downloads\Avtools
Expand-Archive -Path ProcessExplorer.zip -DestinationPath $home\Downloads\Avtools
Expand-Archive -Path TCPView.zip -DestinationPath $home\Downloads\Avtools

#Pe studio malware analysis
Start-process "https://www.winitor.com/download2"
start-Sleep 6
#Give sha256 and compare it to download
$ComparisonHash = (Read-Host "Paste in the sha256 from the website.")

$SourceFile = Read-Host "Pasted the full file path"
$SourceHash = (Get-FileHash -Path $SourceFile -Algorithm sha256).hash

$ComparisonHash = $ComparisonHash -replace '\s',''
#Compare-Object -ReferenceObject $SourceHash -DifferenceObject $ComparisonHash -IncludeEqual
if ($SourceHash -eq $ComparisonHash){
	sleep 2
	cls
	Write-Host "They are correct it has not been tampered with" -ForegroundColor green

}

if ($SourceHash -ne $ComparisonHash) {
cls
	Write-Host "THE HASH IS NOT EQUAL! WARNING THIS MIGHT BE TAMPERED WITH OR EDITED" -ForegroundColor Red
	rm -force $SourceFile
	Write-Host "The file has been DELETED..."
	sleep 4
}

} else {
Write-Host "Skipping malware analysis tool..."
}
clear-variable Ask
# Get some not used services off the computer#
$services = @(
    "diagnosticshub.standardcollector.service" # Microsoft (R) Diagnostics Hub Standard Collector Service
    "DiagTrack"                                # Diagnostics Tracking Service
    "dmwappushservice"                         # WAP Push Message Routing Service (see known issues)
    "lfsvc"                                    # Geolocation Service
    "MapsBroker"                               # Downloaded Maps Manager
    "NetTcpPortSharing"                        # Net.Tcp Port Sharing Service
    "RemoteAccess"                             # Routing and Remote Access
    "RemoteRegistry"                           # Remote Registry
    "SharedAccess"                             # Internet Connection Sharing (ICS)
    "TrkWks"                                   # Distributed Link Tracking Client
    "lmhosts"                                  #TCP/IP NetBIOS Helper
    "WMPNetworkSvc"                            # Windows Media Player Network Sharing Service
    "WSearch"                                  # Windows Search
    "lltdsvc"				       #Link-Layer Topology Discovery Mapper
    "SEMgrSvc"				       #Payments and NFC/SE Manager
)

foreach ($service in $services) {
    Write-Output "Trying to disable $service"
	Get-Service -Name $service | Stop-Service -Force
    Get-Service -Name $service | Set-Service -StartupType Disabled
}
Write-Host "Windows Defender is not going to like this. It think's it's malware but it is not"
$Ask = Read-Host "Do you want to add host entry's? y or n ...Windows Defender will block this go to defender and allow it"
if ($Ask -eq 'y') {
##edit windoes hosts file
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tlocalhost" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n::1`tlocalhost" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tdata.microsoft.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tmsftconnecttest.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tazureedge.net" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tactivity.windows.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tbingapis.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tmsedge.net" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tassets.msn.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tscorecardresearch.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttedge.microsoft.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttdata.msn.com" -Force
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttelemetry.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twns.notify.windows.com.akadns.net"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tus.vortex-win.data.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tus-v10.events.data.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`turs.microsoft.com.nsatc.net"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.telemetry.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.ppe.telemetry.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`tvsgallery.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.live.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`twatson.microsoft.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttelemetry.remoteapp.windowsazure.com"
Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`n0.0.0.0`ttelemetry.urs.microsoft.com"

} else {
Write-Host "Skipping..."
}
clear-variable Ask
Update-MpSignature -UpdateSource MicrosoftUpdateServer
$Prefer = Get-MpPreference
$is_Done = $True
$Ask = Read-Host "Do you want to hardden Windows defender? Y or N. If windows defender find malware it could be false positive and it would be hard to restore the file "
if ($Ask -eq 'y'){

#https://learn.microsoft.com/en-us/powershell/module/defender/set-mppreference?view=windowsserver2022-ps&viewFallbackFrom=win10-ps
$Ask2 = Read-Host "Do you want to hardden Windows Defender?"
    if ($Ask2 -eq 'y'){
    #Enable Defender periodic scanning
    reg add "HKCU\SOFTWARE\Microsoft\Windows Defender" /v PassiveMode /t REG_DWORD /d 2 /f
    Set-MpPreference -DisableRealtimeMonitoring $false
    Set-MpPreference -SignatureScheduleDay Everyday
    Set-MpPreference -CheckForSignaturesBeforeRunningScan true
    Set-MpPreference -CloudBlockLevel 1
    Set-MpPreference -CloudExtendedTimeout 45
    Set-MpPreference -DisableCatchupQuickScan true
    Set-MpPreference -DisableArchiveScanning false
    Set-MpPreference -DisableBehaviorMonitoring false
    Set-MpPreference -DisableDnsOverTcpParsing false
    Set-MpPreference -DisableDnsParsing false
    Set-MpPreference -DisableTlsParsing false
    Set-MpPreference -EnableNetworkProtection Enabled
    Set-MpPreference -DisableInboundConnectionFiltering false
    Set-MpPreference -DisableHttpParsing false
    Set-MpPreference -DisableIOAVProtection false
    Set-MpPreference -DisableRdpParsing false
    Set-MpPreference -DisableRealtimeMonitoring false
    Set-MpPreference -DisableRemovableDriveScanning false
    Set-MpPreference -DisableScanningMappedNetworkDrivesForFullScan false
    Set-MpPreference -DisableScanningNetworkFiles false
    Set-MpPreference -DisableScriptScanning false
    Set-MpPreference -DisableSshParsing false
    Set-MpPreference -EnableDnsSinkhole true
    Set-MpPreference -DisableEmailScanning false
    Set-MpPreference -PUAProtection Enabled
    Set-MpPreference -RealTimeScanDirection Both

    reg add "HKLM\SOFTWARE\Microsoft\Windows Defender\Real-Time Protection" /v DisableRealtimeMonitoring /t REG_DWORD /d 0 /f

        #Set-MpPreference -ScanPurgeItemsAfterDelay 7 #Specifies the number of days to keep items in the scan history folder. After this time, Windows Defender removes the items. If you specify a value of zero, Windows Defender does not remove items. If you do not specify a value, Windows Defender removes items from the scan history folder after the default length of time, which is 15 days.
foreach($ScanRange in -ge 3 -and $ScanRange -le 20){
[int]$ScanRange = Read-Host ("The number Specifies the number of days to keep items in the scan history folder Range 3-20 . Default is 15 days.") -asinit
#ask
if ($ScanRange -ge 3 -and $TheRange -le 20) {
Set-MpPreference -ScanPurgeItemsAfterDelay $ScanRange
Write-Host "Was now set to [$ScanRange]"

} else {
  write-host "Enter in a number in 3-20."
    }
}

Clear-varable ScanRange
    #Set-MpPreference -ScanAvgCPULoadFactor $ScanMAX #Specifies the maximum percentage CPU usage for a scan. The acceptable values for this parameter are: integers from 5 through 100, and the value 0, which disables CPU throttling. Windows Defender does not exceed the percentage of CPU usage that you specify. The default value is 50.
foreach($ScanRange in -ge 15 -and $ScanRange -le 40) {
    [int]$ScanRange = Read-Host ("Default is 25 Enter a number in the range 15-45. For SCAN MAX CPU USAGE.") -asinit
   If ($ScanRange -ge 15 -and $ScanRange -le 40) {
   Set-MpPreference -ScanAvgCPULoadFactor $ScanRange
   } else {
    write-host "Enter in a number in 15-45."
   }
}
Clear-varable ScanRange

   # Set-MpPreference -QuarantinePurgeItemsAfterDelay #Specifies the number of days to keep items in the Quarantine folder. If you specify a value of zero or do not specify a value for this parameter, items stay in the Quarantine folder indefinitely.
foreach($ScanRange in -ge 3 -and $ScanRange -le 30) {
    [int]$ScanRange = Read-Host ("Specifie the number of days to keep items in the Quarantine folder. Range of 3-30.") -asinit
   If ($ScanRange -ge 3 -and $ScanRange -le 30) {
   Set-MpPreference -QuarantinePurgeItemsAfterDelay $ScanRange
   } else {
    write-host "Enter in a number in 3-30."
   }
}
Clear-varable ScanRange

    #Set-MpPreference -LowThreatDefaultAction UserDefined
    #Set-MpPreference -ModerateThreatDefaultAction UserDefined
    #Set-MpPreference -HighThreatDefaultAction  UserDefined
    #Set-MpPreference -UnknownThreatDefaultAction UserDefined

    clear-variable Ask
    clear-varable Ask2
        Read-Host "Do you want disable Exclusions? you will not be able to add any place that is Excluded from a scan"
        if ($Ask -eq 'y'){
        powershell.exe -command "Set-MpPreference -DisableAutoExclusions true"
        clear-variable Ask
        clear-varable Ask2
        } else {
        clear-variable Ask
        clear-varable Ask2
        Write-host "Skiping..."
        }
 Start-Sleep 2
 cls
    clear-variable Ask
    clear-varable Ask2
        Write-Host ""
        Write-Host "Specifies the type of membership in Microsoft Active Protection Service. Microsoft Active Protection Service is an online community that helps you choose how to respond to potential threats. The community also helps prevent the spread of new malicious software. "
        Write-Host ""
        Write-Host "0: Disabled. Send no information to Microsoft. This is the default value."
        Write-Host ""
        Write-Host "1: Basic membership. Send basic information to Microsoft about detected software, including where the software came from, the actions that you apply or that apply automatically, and whether the actions succeeded."
        Write-Host ""
        Write-Host ""
        Write-Host "2: Advanced membership. In addition to basic information, send more information to Microsoft about malicious software, spyware, and potentially unwanted software, including the location of the software, file names, how the software operates, and how it affects your computer."
        Write-Host ""
        Write-Host ""
        Read-Host ("what number 0-2?") -asinit
        if ($Ask -eq '0'){
        Set-MpPreference -MAPSReporting Disabled
        clear-variable Ask
        clear-varable Ask2
        }
        elseif ($Ask -eq '1'){
        Set-MpPreference -MAPSReporting Basic
        }
        elseif ($Ask -eq '2'){
        Set-MpPreference -MAPSReporting Advanced
        } else {
        clear-variable Ask
        clear-varable Ask2
        Write-host "Not a number in range 0-2...So Setting to default"
        Set-MpPreference -MAPSReporting Disabled
        } else {
write-Host ""
}
    }

Write-host "Updating..."
Update-MpSignature
} else {
Write-Host "All Done..."
}

